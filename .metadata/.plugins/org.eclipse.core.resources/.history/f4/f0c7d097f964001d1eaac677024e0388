package com.productcommunity.controller;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.productcommunity.model.Product;
import com.productcommunity.service.ProductService;
import com.productcommunity.util.ProductUtil;

@RestController
@RequestMapping("/product")
@CrossOrigin
public class ProductController {
	@Autowired
	private ProductService productService;
	
	@GetMapping("/getProducts")
	public List<Product> getProducts() {
		return productService.getProducts();
	}
	
	@GetMapping("/search/{type}/{query}")
	public List<Product> searchProducts(@PathVariable String type,@PathVariable String query) {
		return productService.searchProducts(type,query);
	}
	
	@GetMapping("/{productCode}")
	public Product getProduct(@PathVariable String productCode) {
		System.out.println(productService.getProduct(productCode));
		return productService.getProduct(productCode);
	}
	
	@PostMapping("/addProduct")
	public void saveProduct(@RequestBody Product product) {
//		return productService.saveProduct(product);
		Transaction transaction = null;
		try (Session session = ProductUtil.getSessionFactory().openSession()) {
			transaction = session.beginTransaction();
			session.saveOrUpdate(product);
			transaction.commit();
			session.close();
		} catch (Exception e) {
			if (transaction != null) {
				transaction.rollback();
			}
			e.printStackTrace();
		}
	}
	
	
}
